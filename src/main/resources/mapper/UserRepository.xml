<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lec.spring.withbuddy_project.repository.UserRepository">
    <sql id="BASE">
        SELECT id          "id",
               userId      "userId",
               password    "password",
               phone       "phone",
               email       "email",
               addressId   "addressId",
               authorityId "authorityId"
        FROM user_db
        WHERE 1 = 1
    </sql>
    <insert id="save" flushCache="true" parameterType="com.lec.spring.withbuddy_project.domain.User"
            keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO user_db
            (userId, password, phone, email)
        VALUES (#{userId}, #{password}, #{phone}, #{email})
    </insert>

    <insert id="buddy" flushCache="true" parameterType="com.lec.spring.withbuddy_project.domain.MypagePet"
            keyColumn="buddyId" keyProperty="buddyId" useGeneratedKeys="true">
        INSERT INTO buddy_db
            (id, buddyName, category, buddyAge, buddySex, buddyDetail, buddyImage)
        VALUES (#{id}, #{buddyName}, #{category}, #{buddyAge}, #{buddySex}, #{buddyDetail}, #{buddyImage})
    </insert>
    <select id="findBuddy" resultType="com.lec.spring.withbuddy_project.domain.MypagePet">
        SELECT id          "id",
               buddyName   "buddyName",
               buddyImage  "buddyImage",
               buddyAge    "buddyAge",
               buddyDetail "buddyDetail",
               buddySex    "buddySex",
               category    "category"
        FROM buddy_db b
        WHERE 1 = 1
          AND id = #{id}
    </select>

    <select id="findById" resultType="com.lec.spring.withbuddy_project.domain.User">
        <include refid="BASE"/>
        AND id=#{id}
    </select>
    <select id="findByUsername" resultType="com.lec.spring.withbuddy_project.domain.User">
        <include refid="BASE"/>
        AND userId=#{userId}
    </select>
    <select id="findByEmail" resultType="com.lec.spring.withbuddy_project.domain.User">
        <include refid="BASE"/>
        AND email=#{email}
    </select>
    <update id="update" flushCache="true" parameterType="com.lec.spring.withbuddy_project.domain.User"
            keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        UPDATE user_db
        SET userId=#{userId},
            password=#{password},
            email=#{email},
            phone=#{phone},
            addressId=#{addressId}
        WHERE id = #{id}
    </update>

    <select id="findAllUser" resultType="com.lec.spring.withbuddy_project.domain.User">
        <include refid="BASE"/>
    </select>
    <select id="findDmListByLoginUserId" resultType="com.lec.spring.withbuddy_project.domain.User">
        SELECT DISTINCT u.userId "userId",
                        u.id     "id"
        FROM user_db u,
             match_db m
        WHERE u.id = m.senderId
          AND m.receiverId = #{loginId}
          AND m.accept = 1
          AND u.id!=#{loginId}
    </select>
    <select id="findAllWithoutId" resultType="com.lec.spring.withbuddy_project.domain.dto.UserDto">
        SELECT u.id          "id",
               u.userId      "userId",
               a.addressName "addressName",
               b.category    "category",
               b.buddyName   "buddyName",
               b.buddyImage  "buddyImage"
        FROM user_db u,
             address_db a,
             buddy_db b
        WHERE 1 = 1
          AND u.id!=#{id}
          AND a.id=u.addressId
          AND u.addressId=#{addressId}
          AND u.id=b.id
    </select>
    <select id="findUserById" flushCache="true" resultType="com.lec.spring.withbuddy_project.domain.dto.BuddyDto">
        SELECT u.id          "id",
               u.userId      "userId",
               b.buddyName   "buddyName",
               b.buddyImage  "buddyImage",
               b.buddyAge    "buddyAge",
               b.buddyDetail "buddyDetail",
               b.buddySex    "buddySex",
               b.category    "category"
        FROM user_db u,
             buddy_db b
        WHERE u.id = b.id
          AND b.id = #{id}
    </select>

</mapper>